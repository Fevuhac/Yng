////////////////////////////////////////////////////////////////////////////////
// AI calculate no fire quit chance
// AI计算: 延时后退出平均概率： 所有玩家进入场景， 在延时后执行退出操作的平均概率
// 类似字段包括:
// noFireQuitChance
//==============================================================================
// Function
// cal
////////////////////////////////////////////////////////////////////////////////

//==============================================================================
// import
//==============================================================================
var ArrayUtil = require('../../utils/ArrayUtil');
var _ = require('underscore');


//==============================================================================
// const
//==============================================================================

var DEBUG = 0;


//==============================================================================
// public
//==============================================================================

//------------------------------------------------------------------------------
// definition
//------------------------------------------------------------------------------
exports.cal = _cal;

//------------------------------------------------------------------------------
// implement
//------------------------------------------------------------------------------

/**
 * 账户数据更新(每日任务完成度).
 */
function _cal(recent_logs, field_name) {
    if (DEBUG) console.log("CALL hold_chance.cal() - " + field_name);
    
    var numerator = 0;
    var denominator = 0;
    for (var i = 0; i < recent_logs.length; i++) {
        var field_value = recent_logs[i][field_name];
        if (field_value == 2) {
            numerator++;
        }
        if (field_value == 1) {
            denominator++;
        }
    }
    if (DEBUG) console.log("numerator: " + numerator);
    if (DEBUG) console.log("denominator: " + denominator);
    var result = numerator / (denominator == 0 ? 1 : denominator);
    if (DEBUG) console.log("result: " + result);
    if (DEBUG) console.log("----------------------------------------------");
    return result.toFixed(2);
}


//==============================================================================
// private
//==============================================================================
